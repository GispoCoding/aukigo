{"version":3,"sources":["components/mapcomponent.tsx","components/header.tsx","components/layerselector.tsx","theme.ts","components/mainui.tsx","services/getcapabilities.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["mapStyles","polyStyle","Style","stroke","Stroke","color","width","fill","Fill","pointStyle","image","CircleStyle","radius","MapComponent","basemaps","tilesets","useState","olMap","setOlMap","WMTSLayers","WMTS","setActiveTileLayer","mapContainerStyle","height","popup","setPopup","mapRef","useRef","popupRef","useEffect","Map","target","undefined","controls","view","View","center","zoom","setTarget","current","Overlay","element","autoPan","autoPanAnimation","duration","positioning","OverlayPositioning","CENTER_CENTER","getOverlays","getLength","addOverlay","on","evt","features","getFeaturesAtPixel","pixel","length","setPosition","coordinate","hidden","properties","getProperties","innerHTML","title","name_fi","name","website","resultHTML","Object","keys","forEach","key","popupContentFromFeatureProperties","baseLayer","parser","WMTSCapabilities","fetch","url","then","response","text","result","read","options","optionsFromCapabilities","layer","matrixSet","tile_matrix_set","addLayer","TileLayer","source","OLWMTS","zIndex","defaultLayer","vectorTileSource","tileset","attributions","attribution","format","MVT","maxZoom","maxzoom","minZoom","minzoom","tiles","VectorTileSource","createVectorTileSource","vectorLayer","VectorTileLayer","style","layerCenter","transform","updatedView","setView","ref","border","backgroundColor","useStyles","makeStyles","theme","createStyles","root","palette","primary","main","flexGrow","margin","pointerEvents","breakpoints","up","down","paddingRight","menuButton","marginRight","spacing","marginLeft","userSelect","display","search","position","borderRadius","shape","fade","common","white","searchIcon","padding","alignItems","justifyContent","inputRoot","inputInput","paddingLeft","transition","transitions","create","Header","classes","Grid","className","item","md","sm","xs","AppBar","Toolbar","disableGutters","Typography","variant","noWrap","Search","InputBase","placeholder","input","inputProps","IconButton","Settings","bottom","right","layerSelButton","minWidth","LayerSelector","container","direction","justify","Paper","AcUnit","Accessible","AccountBalance","AccountCircle","Apartment","defaultTheme","createMuiTheme","blue","secondary","orange","custom","variable","top","left","minHeight","header","MainUI","ThemeProvider","baseUrl","process","REACT_APP_SERVER","a","headers","Accept","request","json","data","Error","getCapabilities","App","loading","setLoading","capabilities","setCapabilities","setBasemaps","setTilesets","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.a98a9049.chunk.js","sourcesContent":["import React, {\n  useEffect, useRef, useState,\n} from 'react';\nimport 'ol/ol.css';\nimport {\n  Map, MapBrowserEvent, Overlay, View,\n} from 'ol';\nimport TileLayer from 'ol/layer/Tile';\nimport VectorTileLayer from 'ol/layer/VectorTile';\nimport VectorTileSource, { Options as VectorTileOptions } from 'ol/source/VectorTile';\nimport OLWMTS, { optionsFromCapabilities } from 'ol/source/WMTS';\nimport WMTSCapabilities from 'ol/format/WMTSCapabilities';\nimport { transform } from 'ol/proj';\nimport { Fill, Stroke, Style } from 'ol/style';\nimport CircleStyle from 'ol/style/Circle';\nimport MVT from 'ol/format/MVT';\n\nimport OverlayPositioning from 'ol/OverlayPositioning';\nimport { Basemaps, Tileset } from '../types';\n\ninterface MapProps {\n  basemaps: Basemaps,\n  tilesets: Tileset[]\n}\n\nconst mapStyles = {\n  polyStyle: new Style({\n    stroke: new Stroke({\n      color: 'orange',\n      width: 1,\n    }),\n    fill: new Fill({\n      color: 'rgba(20,20,20,0.9',\n    }),\n  }),\n  pointStyle: new Style({\n    image: new CircleStyle({\n      radius: 5,\n      fill: new Fill({\n        color: '#666666',\n      }),\n      stroke: new Stroke({\n        color: '#ffffff',\n        width: 1,\n      }),\n    }),\n  }),\n};\n\nconst createVectorTileSource = (tileset: Tileset):VectorTileSource => {\n  const options: VectorTileOptions = {\n    attributions: tileset.attribution,\n    format: new MVT(),\n    maxZoom: tileset.maxzoom,\n    minZoom: tileset.minzoom,\n    url: tileset.tiles[0],\n  };\n  return new VectorTileSource(options);\n};\n\ninterface FeatureProperties {\n  [key: string]: any,\n}\n\nconst popupContentFromFeatureProperties = (properties: FeatureProperties) => {\n  const title = properties.name_fi ? properties.name_fi : properties.name;\n  const website = properties.website ? properties.website : '';\n  let resultHTML = `<h1>${title}</h1><a href=${website}>${website}</a><table>`;\n  Object.keys(properties).forEach((key) => {\n    resultHTML += `<tr><td>${key}<td><td>${properties[key]}</td><tr />`;\n  });\n  resultHTML += '</table>';\n  return resultHTML;\n};\n\nfunction MapComponent({ basemaps, tilesets }: MapProps) {\n  const [olMap, setOlMap] = useState<Map>();\n  const WMTSLayers = basemaps.WMTS;\n  // eslint-disable-next-line\n  const [activeTileLayer, setActiveTileLayer] = useState<Tileset>();\n  const mapContainerStyle = { height: '100%', width: '100%' };\n  const [popup, setPopup] = useState<Overlay>();\n\n  const mapRef = useRef(null);\n  const popupRef = useRef<HTMLDivElement>(null);\n\n  // Create Map\n  useEffect(() => {\n    setOlMap(new Map({\n      target: undefined,\n      controls: [],\n      view: new View({\n        center: [2478699.953232, 8501593.815476],\n        zoom: 14,\n      }),\n    }));\n  }, []);\n\n  // Set olMap target and create popup Overlay\n  useEffect(() => {\n    if (olMap) {\n      olMap?.setTarget(mapRef.current!);\n      setPopup(new Overlay({\n        element: popupRef.current!,\n        autoPan: true,\n        autoPanAnimation: {\n          duration: 250,\n        },\n        positioning: OverlayPositioning.CENTER_CENTER,\n      }));\n    }\n    return () => olMap?.setTarget(undefined);\n  }, [olMap]);\n\n  // Add popup Overlay to map\n  useEffect(() => {\n    if (!olMap || !popup) return;\n    if (!olMap.getOverlays().getLength()) olMap.addOverlay(popup);\n  }, [olMap, popup]);\n\n  // Create map click event listener\n  useEffect(() => {\n    if (!olMap || !popup) return;\n    olMap.on('click', (evt: MapBrowserEvent) => {\n      if (popupRef.current === null) return;\n      const features = olMap.getFeaturesAtPixel(evt.pixel);\n      if (features.length === 0) {\n        popupRef.current.hidden = true;\n        return;\n      }\n      popup.setPosition(evt.coordinate);\n      popupRef.current.hidden = false;\n      const properties = features[0].getProperties();\n      popupRef.current.innerHTML = popupContentFromFeatureProperties(properties);\n    });\n  }, [olMap, popup]);\n\n  // Set initial WMTS basemap and VectorTileLayer\n  useEffect(() => {\n    if (!olMap) return;\n    const baseLayer = WMTSLayers[0];\n    const parser = new WMTSCapabilities();\n    fetch(baseLayer.url)\n      .then((response) => response.text())\n      .then((text) => {\n        const result = parser.read(text);\n        const options = optionsFromCapabilities(result, {\n          layer: baseLayer.layer,\n          matrixSet: baseLayer.tile_matrix_set,\n        });\n        olMap.addLayer(new TileLayer({\n          source: new OLWMTS(options),\n          zIndex: -1,\n        }));\n      });\n\n    const defaultLayer = tilesets[0];\n    setActiveTileLayer(defaultLayer);\n    const vectorTileSource = createVectorTileSource(defaultLayer);\n    const vectorLayer = new VectorTileLayer({\n      source: vectorTileSource,\n      style: mapStyles.pointStyle,\n    });\n    olMap.addLayer(vectorLayer);\n    const layerCenter = transform(\n      [defaultLayer.center[0], defaultLayer.center[1]],\n      'EPSG:4326', 'EPSG:3857',\n    );\n    const updatedView = new View({\n      center: layerCenter,\n      zoom: defaultLayer.center[2],\n    });\n    olMap.setView(updatedView);\n  }, [olMap, WMTSLayers, tilesets]);\n\n  return (\n    <div style={mapContainerStyle}>\n      <div style={mapContainerStyle} ref={mapRef} />\n      <div\n        ref={popupRef}\n        style={{\n          border: '1px solid black', backgroundColor: '#FFF',\n        }}\n      />\n    </div>\n  );\n}\n\nexport default MapComponent;\n","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport InputBase from '@material-ui/core/InputBase';\nimport {\n  createStyles, fade, Theme, makeStyles,\n} from '@material-ui/core/styles';\nimport { Search, Settings } from '@material-ui/icons';\nimport { Grid } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme: Theme) => createStyles({\n  root: {\n    backgroundColor: theme.palette.primary.main,\n    flexGrow: 1,\n    margin: '30px auto 0 auto',\n    pointerEvents: 'auto',\n    [theme.breakpoints.up('md')]: {\n      margin: '30px 30px 0 auto',\n    },\n    [theme.breakpoints.down('sm')]: {\n      paddingRight: 0,\n    },\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    marginLeft: '16px',\n    flexGrow: 1,\n    pointerEvents: 'none',\n    userSelect: 'none',\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    },\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    margin: '8px 0 8px 8px',\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(1),\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'inherit',\n  },\n  inputInput: {\n    padding: theme.spacing(2, 1, 2, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      width: '12ch',\n      '&:focus': {\n        width: '20ch',\n      },\n    },\n  },\n}));\n\nexport default function Header() {\n  const classes = useStyles();\n\n  return (\n    <Grid\n      className={classes.root}\n      item\n      md={6}\n      sm={11}\n      xs={12}\n    >\n      <AppBar position=\"static\">\n        <Toolbar disableGutters>\n          <Typography className={classes.title} variant=\"h6\" noWrap>\n            aukigo\n          </Typography>\n          <div className={classes.search}>\n            <div className={classes.searchIcon}>\n              <Search />\n            </div>\n            <InputBase\n              placeholder=\"Search…\"\n              classes={{\n                root: classes.inputRoot,\n                input: classes.inputInput,\n              }}\n              inputProps={{ 'aria-label': 'search' }}\n            />\n          </div>\n          <IconButton color=\"inherit\">\n            <Settings />\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n    </Grid>\n  );\n}\n","import React from 'react';\nimport {\n  Grid, makeStyles, createStyles, IconButton, Paper, Theme,\n} from '@material-ui/core';\nimport {\n  AcUnit, Accessible, AccountBalance, AccountCircle, Apartment,\n} from '@material-ui/icons';\n\nconst useStyles = makeStyles((theme: Theme) => (\n  createStyles({\n    root: {\n      backgroundColor: theme.palette.primary.main,\n      zIndex: 100,\n      margin: 'auto',\n      pointerEvents: 'auto',\n      flexGrow: 1,\n      [theme.breakpoints.up('md')]: {\n        position: 'absolute',\n        bottom: '30px',\n        right: '30px',\n      },\n    },\n    layerSelButton: {\n      minWidth: '100%',\n    },\n  })\n));\n\nexport default function LayerSelector() {\n  const classes = useStyles();\n  return (\n    <Grid\n      alignItems=\"center\"\n      className={classes.root}\n      container\n      item\n      direction=\"row\"\n      justify=\"space-evenly\"\n      spacing={3}\n      md={6}\n      sm={11}\n      xs={12}\n    >\n      <Grid item xs>\n        <Paper>\n          <IconButton className={classes.layerSelButton}>\n            <AcUnit />\n          </IconButton>\n        </Paper>\n      </Grid>\n      <Grid item xs>\n        <Paper>\n          <IconButton className={classes.layerSelButton}>\n            <Accessible />\n          </IconButton>\n        </Paper>\n      </Grid>\n      <Grid item xs>\n        <Paper>\n          <IconButton className={classes.layerSelButton}><AccountBalance /></IconButton>\n        </Paper>\n      </Grid>\n      <Grid item xs>\n        <Paper>\n          <IconButton className={classes.layerSelButton}>\n            <AccountCircle />\n          </IconButton>\n        </Paper>\n      </Grid>\n      <Grid item xs>\n        <Paper>\n          <IconButton className={classes.layerSelButton}>\n            <Apartment />\n          </IconButton>\n        </Paper>\n      </Grid>\n    </Grid>\n  );\n}\n","import { createMuiTheme } from '@material-ui/core';\nimport { orange, blue } from '@material-ui/core/colors';\n\ndeclare module '@material-ui/core/styles/createMuiTheme' {\n  interface Theme {\n    custom: {\n      variable: string,\n    },\n  }\n  interface ThemeOptions {\n    custom?: {\n      variable: string,\n    }\n  }\n}\n\nconst defaultTheme = createMuiTheme({\n  palette: {\n    primary: blue,\n    secondary: orange,\n  },\n  custom: {\n    variable: '#000',\n  },\n});\n\nexport default defaultTheme;\n","import React from 'react';\nimport { Grid } from '@material-ui/core';\nimport { ThemeProvider, makeStyles, createStyles } from '@material-ui/core/styles';\nimport Header from './header';\nimport LayerSelector from './layerselector';\nimport theme from '../theme';\n\nconst useStyles = makeStyles(() => (\n  createStyles({\n    root: {\n      flexGrow: 1,\n      position: 'fixed',\n      top: 0,\n      left: 0,\n      minHeight: '100vh',\n      pointerEvents: 'none',\n      zIndex: 100,\n    },\n    header: {\n      flexGrow: 1,\n    },\n  })\n));\n\nexport default function MainUI() {\n  const classes = useStyles();\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Grid\n        container\n        item\n        className={classes.root}\n        direction=\"column\"\n        justify=\"flex-start\"\n        spacing={0}\n        xs={12}\n      >\n        <Grid item className={classes.header}>\n          <Header />\n        </Grid>\n        <Grid item>\n          <LayerSelector />\n        </Grid>\n      </Grid>\n    </ThemeProvider>\n  );\n}\n","import { Capabilities } from '../types';\n\nconst baseUrl = process.env.REACT_APP_SERVER;\n\nasync function getCapabilities(): Promise<Capabilities> {\n  const url = `${baseUrl}/api/capabilities`;\n  const options = {\n    headers: {\n      Accept: 'application/json',\n    },\n  };\n  try {\n    const request = await fetch(url, options);\n    const data:Capabilities = await request.json();\n    return data;\n  } catch (e) {\n    throw new Error(e);\n  }\n}\n\nexport default getCapabilities;\n","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport MapComponent from './components/mapcomponent';\nimport MainUI from './components/mainui';\nimport getCapabilities from './services/getcapabilities';\nimport { Capabilities, Basemaps, Tileset } from './types';\n\nfunction App() {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [capabilities, setCapabilities] = useState<Capabilities>();\n  const [basemaps, setBasemaps] = useState<Basemaps>();\n  const [tilesets, setTilesets] = useState<Tileset[]>([]);\n\n  // Get capabilities document from backend\n  useEffect(() => {\n    getCapabilities()\n      .then((response) => {\n        setCapabilities(response);\n      });\n  }, []);\n\n  // Set basemaps and tilesets\n  useEffect(() => {\n    if (capabilities) {\n      setBasemaps(capabilities!.basemaps);\n      setTilesets(capabilities!.tilesets);\n    }\n  }, [capabilities]);\n\n  // Unset loading when ready\n  useEffect(() => {\n    if (basemaps && tilesets) { setLoading(false); }\n  }, [basemaps, tilesets]);\n\n  if (loading) { return <div>Loading...</div>; }\n  return (\n    <div className=\"App\">\n      <MainUI />\n      <MapComponent basemaps={basemaps!} tilesets={tilesets!} />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n  // [::1] is the IPv6 localhost address.\n  || window.location.hostname === '[::1]'\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  || window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  ),\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href,\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service '\n            + 'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all '\n                + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404\n        || (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}